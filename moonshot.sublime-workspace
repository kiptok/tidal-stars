{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"date",
				"debug.getmetatable\t(object)"
			],
			[
				"fileSy",
				"love.filesystem.write"
			],
			[
				"x",
				"xpcall\txpcall(func, error)"
			]
		]
	},
	"buffers":
	[
		{
			"file": "src/constants.lua",
			"settings":
			{
				"buffer_size": 285,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "require 'src/Dependencies'\n-- local entity -- entity is what we'll be controlling\n\nlocal world = {} -- the empty world-state\nlocal t\nlocal name = string.format('%f.txt', os.time())\n-- local file = love.filesystem.newFile(name)\n\nfunction love.load()\n\n  t = 0\n\n  love.graphics.setDefaultFilter('nearest', 'nearest')\n  love.window.setTitle('we have the stars')\n\n\tmath.randomseed(os.time())\n\n\tpush:setupScreen(VIRTUAL_WIDTH, VIRTUAL_HEIGHT, WINDOW_WIDTH, WINDOW_HEIGHT, {\n    vsync = true,\n    fullscreen = false,\n    -- fullscreen = true,\n  \tresizable = true\n  })\n\n  font = love.graphics.newFont('fonts/font.ttf', 16)\n\n  bpm = 120\n  spb = 60 / bpm\n  stars = {}\n  local dur = 60\n  song = Song (dur)\n\n  local dice = 4\n  local my = 0\n  local my = 0\n  for i = 1, dice do\n    mx = mx + math.random(VIRTUAL_WIDTH / dice)\n    my = my + math.random(VIRTUAL_HEIGHT / dice)\n  end\n\n  moon = Moon (mx, my)\n\n  love.graphics.setColor(1, 1, 1, 1)\n  love.graphics.rectangle('fill', 0, 0, VIRTUAL_WIDTH, VIRTUAL_HEIGHT)\n\n  love.mouse.setVisible(false)\n\n  love.keyboard.keysPressed = {}\n\n\n\n\nend\n\nfunction love.resize(w, h)\n  -- push:resize(w, h)\nend\n\nfunction love.update(dt)\n  t = t + dt\n\n\n\n  love.keyboard.keysPressed = {}\nend\n\nfunction love.draw()\n  push:start()\n\n  push:finish()\n  -- displayFPS()\nend\n\nfunction love.keypressed(key)\n  love.keyboard.keysPressed[key] = true\n  if key == 'escape' then\n    love.event.quit()\n  end\nend\n\nfunction love.keyboard.wasPressed(key)\n  if love.keyboard.keysPressed[key] then\n    return true\n  else\n    return false\n  end\nend\n\nfunction writeCellsToFile()\n  local success\n  local message\n  local data\n  local serialized\n  for k, cell in pairs(song:pointsToCells()) do\n      data = string.format('%d%s %d %d %f %f %f %f %s',\n          k, ',', cell[1], cell[2], cell[3], cell[4], cell[5], cell[6], ';\\n')\n      success, message = love.filesystem.append(name, data)\n  end\n  -- local serialized = lume.serialize(song:pointsToCells())\n  -- success, message = love.filesystem.write(name, serialized)\nend\n\n-- linear interpolation\nfunction lerp(a, b, t)\n  return a + t * (b - a)\nend\n\n-- color interpolation\nfunction lerpColor(a, b, t)\n  local color1 = a\n  local color2 = b\n  local newColor = {}\n  for i = 1, 3 do\n    table.insert(newColor, lerp(color1[i], color2[i], t))\n  end\n  table.insert(newColor, 1)\n  return newColor\nend\n\n-- round to nearest integer\nfunction round(a)\n  return math.floor(a + 0.5)\nend\n\nfunction diagonalDistance(p0, p1)\n  local dx = p1.x - p0.x\n  local dy = p1.y - p0.y\n  return math.max(math.abs(dx), math.abs(dy))\nend\n\nfunction hypotenuse(p0, p1)\n  local dx = p1.x - p0.x\n  local dy = p1.y - p0.y\n  return math.sqrt(dx*dx + dy*dy)\n\nend\n\n-- taken from https://www.cs.rit.edu/~ncs/color/t_convert.html\nfunction RGBtoHSV(r, g, b)\n  local min = math.min(r, g, b)\n  local max = math.max(r, g, b)\n  local delta = max - min\n\n  local h\n  local s\n  local v = max\n\n  if max ~= 0 then\n    s = delta / max\n  else\n    s = 0\n    h = -1\n    return h, s, v\n  end\n\n  if r == max then\n    h = (g - b) / delta\n  elseif g == max then\n    h = 2 + (b - r) / delta\n  else\n    h = 4 + (r - g) / delta\n  end\n\n  h = h * 60\n  if h < 0 then\n    h = h + 360\n  end\n\n  return h, s, v\nend\n\nfunction HSVtoRGB(h, s, v)\n  if s == 0 then\n    return v, v, v\n  end\n\n  local h = h / 60\n  local i = math.floor(h)\n  local f = h - i\n  local p = v * (1 - s)\n  local q = v * (1 - s * f)\n  local t = v * (1 - s * (1 - f))\n\n  local result = {\n    [0] = function() return v, t, p end,\n    [1] = function() return q, v, p end,\n    [2] = function() return p, v, t end,\n    [3] = function() return p, q, v end,\n    [4] = function() return t, p, v end,\n    [5] = function() return v, p, q end\n  }\n\n  return result[i]\nend\n\nfunction displayFPS()\n  -- simple FPS display across all states\n  love.graphics.setFont(font)\n  love.graphics.setColor(1, 1, 1, 1)\n  love.graphics.print('FPS: ' .. tostring(love.timer.getFPS()), 10, 10)\nend",
			"file": "main.lua",
			"file_size": 3662,
			"file_write_time": 132505867093327256,
			"settings":
			{
				"buffer_size": 3910,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Moon.lua",
			"settings":
			{
				"buffer_size": 1058,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/C/Users/kipto/Dropbox/LOVE/Wiresx/main.lua",
			"settings":
			{
				"buffer_size": 7292,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/C/Users/kipto/Dropbox/LOVE/Wiresx/src/Heart.lua",
			"settings":
			{
				"buffer_size": 2822,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/C/Users/kipto/Dropbox/LOVE/Wiresx/src/constants.lua",
			"settings":
			{
				"buffer_size": 1649,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/Lua/Lua.sublime-build",
					""
				],
				[
					"Packages/Lua Love/LuaLove.sublime-build",
					""
				],
				[
					"Packages/Lua Love/LuaLove.sublime-build",
					"Run"
				],
				[
					"Packages/Lua Love/LuaLove.sublime-build",
					"Love2D"
				],
				[
					"Packages/Lua Love/LuaLove.sublime-build",
					"ldoc: File"
				],
				[
					"Packages/Lua Love/LuaLove.sublime-build",
					"ldoc: Project"
				]
			],
			[
				"Packages/Lua Love/LuaLove.sublime-build",
				"Love2D"
			]
		],
		[
			[
				[
					"Packages/Processing/Build Systems/Processing.sublime-build",
					""
				],
				[
					"Packages/Processing/Build Systems/Processing.sublime-build",
					"Re-run sketch"
				],
				[
					"Packages/Processing/Build Systems/Processing.sublime-build",
					"Run sketch (Processing 3 only)"
				],
				[
					"Packages/Processing/Build Systems/Processing.sublime-build",
					"Run sketch fullscreen"
				],
				[
					"Packages/Processing/Build Systems/Processing.sublime-build",
					"Export sketch as application"
				],
				[
					"Packages/Processing/Build Systems/Processing.sublime-build",
					"Kill running sketches"
				]
			],
			[
				"Packages/Processing/Build Systems/Processing.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"Package Control: ",
				"Package Control: Install Package"
			],
			[
				"package control: install",
				"Package Control: Install Package"
			],
			[
				"luaro",
				"Package Control: Upgrade/Overwrite All Packages"
			],
			[
				"Package Control:insta",
				"Package Control: Install Package"
			],
			[
				"set syntax: Lua",
				"Set Syntax: Lua"
			],
			[
				"pack\t instal",
				"Package Control: Install Package"
			],
			[
				"Install P",
				"Install Package Control"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/Users/kipto/Dropbox/LOVE/moonshot-build",
		"/C/Users/kipto/Dropbox/LOVE/moonshot-build/src",
		"/C/Users/kipto/Dropbox/LOVE/Wiresx",
		"/C/Users/kipto/Dropbox/LOVE/Wiresx/src"
	],
	"file_history":
	[
		"/C/Users/kipto/OneDrive/Desktop/kiptok/Sketchbook/202011/sketch_201113a/sketch_201113a",
		"/C/Users/kipto/OneDrive/Desktop/kiptok/Sketchbook/202011/201112a/201112a.pde",
		"/C/Users/kipto/OneDrive/Desktop/kiptok/Sketchbook/202011/test/test.pde",
		"/C/Users/kipto/OneDrive/Desktop/kiptok/Sketchbook/202011/test/colorTest.pde",
		"/C/Users/kipto/OneDrive/Desktop/kiptok/Sketchbook/202011/sketch_201107c/sketch_201107c.pde",
		"/C/Users/kipto/Dropbox/LOVE/Wiresx/src/Hearts.lua"
	],
	"find":
	{
		"height": 26.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 2,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "src/constants.lua",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 285,
						"regions":
						{
						},
						"selection":
						[
							[
								55,
								55
							]
						],
						"settings":
						{
							"syntax": "Packages/Lua/Lua.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "main.lua",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3910,
						"regions":
						{
						},
						"selection":
						[
							[
								2331,
								2331
							]
						],
						"settings":
						{
							"syntax": "Packages/Lua/Lua.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 119.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "src/Moon.lua",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1058,
						"regions":
						{
						},
						"selection":
						[
							[
								405,
								405
							]
						],
						"settings":
						{
							"syntax": "Packages/Lua/Lua.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		},
		{
			"selected": 3,
			"sheets":
			[
				{
					"buffer": 3,
					"file": "/C/Users/kipto/Dropbox/LOVE/Wiresx/main.lua",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7292,
						"regions":
						{
						},
						"selection":
						[
							[
								1577,
								1577
							]
						],
						"settings":
						{
							"syntax": "Packages/Lua/Lua.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 714.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "/C/Users/kipto/Dropbox/LOVE/Wiresx/main.lua",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7292,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Lua/Lua.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 595.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "/C/Users/kipto/Dropbox/LOVE/Wiresx/src/Heart.lua",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2822,
						"regions":
						{
						},
						"selection":
						[
							[
								573,
								573
							]
						],
						"settings":
						{
							"syntax": "Packages/Lua/Lua.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "/C/Users/kipto/Dropbox/LOVE/Wiresx/src/constants.lua",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1649,
						"regions":
						{
						},
						"selection":
						[
							[
								454,
								454
							]
						],
						"settings":
						{
							"syntax": "Packages/Lua/Lua.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 119.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 26.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.5,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 126.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "moonshot.sublime-project",
	"replace":
	{
		"height": 48.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 150.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
